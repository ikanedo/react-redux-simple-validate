{"version":3,"sources":["../../../src/forms/formElement/formElementFromStateSpec.js"],"names":["describe","formState","firstName","remember","rdoExample","it","notFoundInput","attr","getKeyVal","expect","toBeNull","checkbox","toHaveMember","radioTrue","checked","toBe","props","radioFalse","foundInput"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC9BA,uPAII,YAAM;AACN,QAAMC,YAAY;AAChBC,iBAAW,MADK;AAEhBC,gBAAU,IAFM;AAGhBC,kBAAY;AAHI,KAAlB;;AAMAC,OAAG,0CAAH,EAA+C,YAAM;AACnD,UAAMC,gBAAgB,yCAAO,MAAK,UAAZ,EAAuB,MAAK,MAA5B,GAAtB;AACA,UAAMC,OAAO,oCAAqBD,aAArB,EAAoCE,SAApC,EAAb;AACAC,aAAOF,IAAP,EAAaG,QAAb;AACD,KAJD;;AAMAL,OAAG,8CAAH,EAAmD,YAAM;AACvD,UAAMC,gBAAgB,yCAAO,MAAK,UAAZ,EAAuB,MAAK,MAA5B,GAAtB;AACA,UAAMC,OAAO,oCAAqBD,aAArB,EAAoCL,SAApC,EAA+CO,SAA/C,EAAb;AACAC,aAAOF,IAAP,EAAaG,QAAb;AACD,KAJD;;AAMAL,OAAG,uDAAH,EAA4D,YAAM;AAChE,UAAMM,WAAW,yCAAO,MAAK,UAAZ,EAAuB,MAAK,UAA5B,EAAuC,OAAM,UAA7C,GAAjB;AACA,UAAMJ,OAAO,oCAAqBI,QAArB,EAA+BV,SAA/B,EAA0CO,SAA1C,EAAb;AACAC,aAAOF,IAAP,EAAaK,YAAb,CAA0B,SAA1B;AACD,KAJD;;AAMAP,OAAG,2EAAH,EAAgF,YAAM;AACpF,UAAMQ,YAAY,yCAAO,MAAK,OAAZ,EAAoB,MAAK,YAAzB,EAAsC,OAAM,OAA5C,EAAoD,aAApD,GAAlB;AACA,UAAMN,OAAO,oCAAqBM,SAArB,EAAgCZ,SAAhC,EAA2CO,SAA3C,EAAb;AACAC,aAAOF,KAAKO,OAAZ,EAAqBC,IAArB,CAA0BF,UAAUG,KAAV,CAAgBF,OAA1C;AACD,KAJD;;AAMAT,OAAG,gFAAH,EAAqF,YAAM;AACzF,UAAMY,aAAa,yCAAO,MAAK,OAAZ,EAAoB,MAAK,YAAzB,EAAsC,OAAM,SAA5C,EAAsD,SAAS,KAA/D,GAAnB;AACA,UAAMV,OAAO,oCAAqBU,UAArB,EAAiChB,SAAjC,EAA4CO,SAA5C,EAAb;AACAC,aAAOF,KAAKO,OAAZ,EAAqBC,IAArB,CAA0BE,WAAWD,KAAX,CAAiBF,OAA3C;AACD,KAJD;;AAMAT,OAAG,8EAAH,EAAmF,YAAM;AACvF,UAAMa,aAAa,yCAAO,MAAK,WAAZ,EAAwB,MAAK,MAA7B,GAAnB;AACA,UAAMX,OAAO,oCAAqBW,UAArB,EAAiCjB,SAAjC,EAA4CO,SAA5C,EAAb;AACAC,aAAOF,IAAP,EAAaK,YAAb,CAA0B,OAA1B;AACD,KAJD;AAKD,GA9CH;AAgDD,CAjDD","file":"formElementFromStateSpec.js","sourcesContent":["import React from 'react';\nimport formElementFromState from './formElementFromState';\n\ndescribe('FormValueAttr', () => {\n  describe(\n    `Facade function which returns the value attr (key/val) from the state.\n    Please read - https://facebook.github.io/react/docs/forms.html\n    The reason why we do this is to transform every form element into a controlled component`\n    , () => {\n      const formState = {\n        firstName: 'John',\n        remember: true,\n        rdoExample: 'apple'\n      };\n\n      it('SHOULD return null WHEN values are empty', () => {\n        const notFoundInput = <input name=\"notFound\" type=\"text\" />;\n        const attr = formElementFromState(notFoundInput).getKeyVal();\n        expect(attr).toBeNull();\n      });\n\n      it('SHOULD return null WHEN element is not found', () => {\n        const notFoundInput = <input name=\"notFound\" type=\"text\" />;\n        const attr = formElementFromState(notFoundInput, formState).getKeyVal();\n        expect(attr).toBeNull();\n      });\n\n      it('SHOULD return checked attr WHEN element is a checkbox', () => {\n        const checkbox = <input type=\"checkbox\" name=\"remember\" value=\"not this\" />;\n        const attr = formElementFromState(checkbox, formState).getKeyVal();\n        expect(attr).toHaveMember('checked');\n      });\n\n      it('SHOULD return checked attribute TRUE WHEN radio element name is the value', () => {\n        const radioTrue = <input type=\"radio\" name=\"rdoExample\" value=\"apple\" checked />;\n        const attr = formElementFromState(radioTrue, formState).getKeyVal();\n        expect(attr.checked).toBe(radioTrue.props.checked);\n      });\n\n      it('SHOULD return checked attribute FALSE WHEN radio element name is NOT the value', () => {\n        const radioFalse = <input type=\"radio\" name=\"rdoExample\" value=\"oranges\" checked={false} />;\n        const attr = formElementFromState(radioFalse, formState).getKeyVal();\n        expect(attr.checked).toBe(radioFalse.props.checked);\n      });\n\n      it('SHOULD return value attr WHEN element is a regular input, select or textarea', () => {\n        const foundInput = <input name=\"firstName\" type=\"text\" />;\n        const attr = formElementFromState(foundInput, formState).getKeyVal();\n        expect(attr).toHaveMember('value');\n      });\n    }\n  );\n});\n"]}