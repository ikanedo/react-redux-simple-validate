{"version":3,"sources":["../../src/forms/formGroup.js"],"names":["FormActions","FormGroupDefault","props","onValidate","bind","onInvalidate","onValueChange","onSubmit","formValidator","Validator","stringRefs","formName","defaultErrors","defaultValues","setInitialData","nextProps","values","errors","children","isTriggerValidation","isSameValues","JSON","stringify","isSameErrors","isSameChildren","prevProps","validation","setConstraints","triggerValidate","setValidity","handleValidForm","handleInvalidForm","formData","errorMsgs","validate","isValid","e","setSingleValidity","single","target","name","setInputValue","getVal","invalidateEvent","validateEvent","className","formElements","Component","displayName","defaultProps","mapStateToProps","state","formState","Forms"],"mappings":"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","file":"formGroup.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Validator from '../validators/validator';\nimport formElementFromEvt from './formElement/formElementFromEvt';\nimport formBuilder from './formBuilder';\nimport { filterValidation, getFormData } from './formUtils';\nimport * as FormActions from './formActions';\n\nclass FormGroupDefault extends Component {\n  constructor(props) {\n    super(props);\n    this.onValidate = this.onValidate.bind(this);\n    this.onInvalidate = this.onInvalidate.bind(this);\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.formValidator = new Validator(filterValidation(props));\n    this.stringRefs = {};\n  }\n\n  componentDidMount() {\n    const {\n      formName,\n      defaultErrors,\n      defaultValues,\n      setInitialData\n    } = this.props;\n\n    if (defaultErrors || defaultValues) {\n      setInitialData(\n        formName,\n        defaultValues,\n        defaultErrors\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      values,\n      errors,\n      children\n    } = this.props;\n\n    if (nextProps.isTriggerValidation) {\n      return true;\n    }\n\n    const isSameValues = JSON.stringify(values) === JSON.stringify(nextProps.values);\n    const isSameErrors = JSON.stringify(errors) === JSON.stringify(nextProps.errors);\n    const isSameChildren = children === nextProps.children;\n\n    return !(isSameValues && isSameErrors && isSameChildren);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.validation !== this.props.validation) {\n      this.formValidator.setConstraints(filterValidation(prevProps));\n    }\n\n    if (this.props.isTriggerValidation) {\n      this.onSubmit();\n      this.props.triggerValidate(this.props.formName, false);\n    }\n  }\n\n  onSubmit() {\n    const {\n      children,\n      formName,\n      setValidity,\n      handleValidForm,\n      handleInvalidForm\n    } = this.props;\n    const formData = getFormData(children, this.stringRefs);\n    const errorMsgs = this.formValidator.validate(formData);\n    setValidity(formName, errorMsgs);\n\n    const isValid = !errorMsgs;\n    if (isValid) {\n      handleValidForm(formData, formName);\n    } else {\n      handleInvalidForm(errorMsgs, formName);\n    }\n  }\n\n  onValidate(e) {\n    const {\n      children,\n      formName,\n      setSingleValidity\n    } = this.props;\n\n    const formData = getFormData(children, this.stringRefs);\n    const errorMsgs = this.formValidator.single(e.target.name, formData);\n    const isValid = !errorMsgs;\n\n    if (isValid) {\n      setSingleValidity(\n        formName,\n        { [e.target.name]: errorMsgs }\n      );\n    }\n  }\n\n  onInvalidate(e) {\n    const {\n      children,\n      formName,\n      setSingleValidity\n    } = this.props;\n    const formData = getFormData(children, this.stringRefs);\n    const errorMsgs = this.formValidator.single(e.target.name, formData);\n    const isValid = !errorMsgs;\n\n    if (!isValid) {\n      setSingleValidity(\n        formName,\n        { [e.target.name]: errorMsgs }\n      );\n    }\n  }\n\n  onValueChange(e) {\n    const {\n      formName,\n      setInputValue\n    } = this.props;\n\n    setInputValue(\n      formName,\n      { [e.target.name]: formElementFromEvt(e).getVal() }\n    );\n  }\n\n  render() {\n    const {\n      children,\n      values,\n      errors,\n      invalidateEvent,\n      validateEvent,\n      className\n    } = this.props;\n    const formElements = formBuilder({\n      stringRefs: this.stringRefs,\n      onValidate: this.onValidate,\n      onInvalidate: this.onInvalidate,\n      onValueChange: this.onValueChange,\n      values,\n      errors,\n      children,\n      invalidateEvent,\n      validateEvent\n    });\n\n    return (\n      <div className={`form-group ${className || ''}`}>\n        {formElements}\n      </div>\n    );\n  }\n}\n\nFormGroupDefault.displayName = 'FormGroup';\nFormGroupDefault.defaultProps = {\n  invalidateEvent: 'onBlur',\n  validateEvent: 'onChange',\n  handleInvalidForm() {}\n};\n\nFormGroupDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n  validation: PropTypes.shape({\n    rules: PropTypes.object.isRequired,\n    messages: PropTypes.object.isRequired\n  }),\n  handleValidForm: PropTypes.func.isRequired,\n  handleInvalidForm: PropTypes.func,\n  formName: PropTypes.string.isRequired,\n  values: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  defaultValues: PropTypes.object,\n  defaultErrors: PropTypes.object,\n  setInitialData: PropTypes.func.isRequired,\n  setValidity: PropTypes.func.isRequired,\n  setSingleValidity: PropTypes.func.isRequired,\n  setInputValue: PropTypes.func.isRequired,\n  triggerValidate: PropTypes.func,\n  invalidateEvent: PropTypes.string,\n  validateEvent: PropTypes.string,\n  className: PropTypes.string\n};\n\nfunction mapStateToProps(state, props) {\n  const formState = state.Forms[props.formName] || {};\n  return {\n    values: formState.values || {},\n    errors: formState.errors || {},\n    isTriggerValidation: !!formState.isTriggerValidation\n  };\n}\n\nexport default connect(mapStateToProps, FormActions)(FormGroupDefault);\n"]}