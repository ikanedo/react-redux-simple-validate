{"version":3,"sources":["../../src/forms/formGroup.js"],"names":["FormActions","FormGroupDefault","props","onValidate","bind","onInvalidate","onValueChange","onSubmit","formValidator","stringRefs","formName","defaultErrors","defaultValues","setInitialData","nextProps","validation","setConstraints","isTriggerValidation","triggerValidate","values","errors","children","isSameValues","isSameErrors","isSameChildren","setValidity","handleValidForm","handleInvalidForm","formData","errorMsgs","validate","isValid","e","setSingleValidity","single","target","name","setInputValue","getVal","invalidateEvent","validateEvent","className","formElements","displayName","defaultProps","propTypes","node","isRequired","shape","rules","object","messages","func","string","mapStateToProps","state","formState","Forms"],"mappings":"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","file":"formGroup.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Validator from '../validators/validator';\nimport formElementFromEvt from './formElement/formElementFromEvt';\nimport formBuilder from './formBuilder';\nimport { filterValidation, getFormData } from './formUtils';\nimport * as FormActions from './formActions';\n\nexport class FormGroupDefault extends Component {\n  constructor(props) {\n    super(props);\n    this.onValidate = this.onValidate.bind(this);\n    this.onInvalidate = this.onInvalidate.bind(this);\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.formValidator = new Validator(filterValidation(props));\n    this.stringRefs = {};\n  }\n\n  componentDidMount() {\n    const {\n      formName,\n      defaultErrors,\n      defaultValues,\n      setInitialData\n    } = this.props;\n\n    if (defaultErrors || defaultValues) {\n      setInitialData(\n        formName,\n        defaultValues,\n        defaultErrors\n      );\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.validation !== this.props.validation) {\n      this.formValidator.setConstraints(filterValidation(nextProps));\n    }\n\n    if (nextProps.isTriggerValidation) {\n      this.onSubmit();\n      this.props.triggerValidate(nextProps.formName, false);\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      values,\n      errors,\n      children\n    } = this.props;\n    const isSameValues = values === nextProps.values;\n    const isSameErrors = errors === nextProps.errors;\n    const isSameChildren = children === nextProps.children;\n    return !(isSameValues && isSameErrors && isSameChildren);\n  }\n\n  onSubmit() {\n    const {\n      children,\n      formName,\n      setValidity,\n      handleValidForm,\n      handleInvalidForm\n    } = this.props;\n    const formData = getFormData(children, this.stringRefs);\n    const errorMsgs = this.formValidator.validate(formData);\n    setValidity(formName, errorMsgs);\n\n    const isValid = !errorMsgs;\n    if (isValid) {\n      handleValidForm(formData, formName);\n    } else {\n      handleInvalidForm(errorMsgs, formName);\n    }\n  }\n\n  onValidate(e) {\n    const {\n      children,\n      formName,\n      setSingleValidity\n    } = this.props;\n\n    const formData = getFormData(children, this.stringRefs);\n    const errorMsgs = this.formValidator.single(e.target.name, formData);\n    const isValid = !errorMsgs;\n\n    if (isValid) {\n      setSingleValidity(\n        formName,\n        { [e.target.name]: errorMsgs }\n      );\n    }\n  }\n\n  onInvalidate(e) {\n    const {\n      children,\n      formName,\n      setSingleValidity\n    } = this.props;\n    const formData = getFormData(children, this.stringRefs);\n    const errorMsgs = this.formValidator.single(e.target.name, formData);\n    const isValid = !errorMsgs;\n\n    if (!isValid) {\n      setSingleValidity(\n        formName,\n        { [e.target.name]: errorMsgs }\n      );\n    }\n  }\n\n  onValueChange(e) {\n    const {\n      formName,\n      setInputValue\n    } = this.props;\n\n    setInputValue(\n      formName,\n      { [e.target.name]: formElementFromEvt(e).getVal() }\n    );\n  }\n\n  render() {\n    const {\n      children,\n      values,\n      errors,\n      invalidateEvent,\n      validateEvent,\n      className\n    } = this.props;\n    const formElements = formBuilder({\n      stringRefs: this.stringRefs,\n      onValidate: this.onValidate,\n      onInvalidate: this.onInvalidate,\n      onValueChange: this.onValueChange,\n      values,\n      errors,\n      children,\n      invalidateEvent,\n      validateEvent\n    });\n\n    return (\n      <div className={`form-group ${className || ''}`}>\n        {formElements}\n      </div>\n    );\n  }\n}\n\nFormGroupDefault.displayName = 'FormGroup';\nFormGroupDefault.defaultProps = {\n  invalidateEvent: 'onBlur',\n  validateEvent: 'onChange',\n  handleInvalidForm: () => {}\n};\n\nFormGroupDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n  validation: PropTypes.shape({\n    rules: PropTypes.object.isRequired,\n    messages: PropTypes.object.isRequired\n  }),\n  handleValidForm: PropTypes.func.isRequired,\n  handleInvalidForm: PropTypes.func,\n  formName: PropTypes.string.isRequired,\n  values: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  defaultValues: PropTypes.object,\n  defaultErrors: PropTypes.object,\n  setInitialData: PropTypes.func.isRequired,\n  setValidity: PropTypes.func.isRequired,\n  setSingleValidity: PropTypes.func.isRequired,\n  setInputValue: PropTypes.func.isRequired,\n  triggerValidate: PropTypes.func,\n  invalidateEvent: PropTypes.string,\n  validateEvent: PropTypes.string,\n  className: PropTypes.string\n};\n\nfunction mapStateToProps(state, props) {\n  const formState = state.Forms[props.formName] || {};\n  return {\n    values: formState.values || {},\n    errors: formState.errors || {},\n    isTriggerValidation: !!formState.isTriggerValidation\n  };\n}\n\nexport default connect(mapStateToProps, FormActions)(FormGroupDefault);\n"]}