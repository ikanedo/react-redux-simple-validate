{"version":3,"sources":["../../src/forms/formBuilder.js"],"names":["formBuilder","isLikeStringOrNum","element","isAnErrorEl","type","displayName","getErrorMsg","name","errors","getErrorElProps","forInput","props","msg","mergeCallbacks","args","e","filter","arg","forEach","cb","getHasValueClassName","formElementValue","value","getErrorInputClassName","hasErrors","getFormElProps","values","onValidate","onValueChange","onChange","onBlur","className","getKeyVal","Error","key","ref","join","getElProps","getChildren","childrenProp","recurFormBuilder","Children","map","children","elementProps","elementChildren","bind","cloneElement"],"mappings":"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","file":"formBuilder.js","sourcesContent":["import React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport { isAReactEl, isAFormEl, isAFormGroup } from './formUtils';\nimport { ERROR_INPUT_CLASS_NAME, HAS_VALUE_CLASS_NAME } from './formConstants';\nimport { getFormElementRefName } from './formElement/formElementUtils';\nimport formElementFromState from './formElement/formElementFromState';\n\nfunction isLikeStringOrNum(element) {\n  return !isAReactEl(element);\n}\n\nfunction isAnErrorEl({ type }) {\n  return type.displayName === 'FormError';\n}\n\nfunction getErrorMsg(name, errors) {\n  return (errors[name] || [])[0];\n}\n\nfunction getErrorElProps(element, { errors }) {\n  const { forInput } = element.props;\n  return {\n    ...element.props,\n    msg: getErrorMsg(forInput, errors)\n  };\n}\n\nfunction mergeCallbacks(...args) {\n  return (e) => {\n    args.filter(arg => isFunction(arg))\n      .forEach(cb => cb(e));\n  };\n}\n\nfunction getHasValueClassName(formElementValue) {\n  const element = formElementValue || {};\n  return isEmpty(element.value) ? '' : HAS_VALUE_CLASS_NAME;\n}\n\nfunction getErrorInputClassName(name, errors) {\n  const hasErrors = !!getErrorMsg(name, errors);\n  return hasErrors ? ERROR_INPUT_CLASS_NAME : '';\n}\n\nfunction getFormElProps(element, { errors, values, onValidate, onValueChange }) {\n  const {\n    name,\n    onChange,\n    onBlur,\n    className\n  } = element.props;\n  const formElementValue = formElementFromState(element, values).getKeyVal();\n\n  if (isEmpty(name)) {\n    throw new Error(`${element.type} element is missing a name attribute!`, element);\n  }\n\n  return {\n    ...element.props,\n    key: name,\n    ref: getFormElementRefName(element),\n    onChange: mergeCallbacks(onValueChange, onChange),\n    onBlur: mergeCallbacks(onValidate, onBlur),\n    className: [\n      className,\n      getErrorInputClassName(name, errors),\n      getHasValueClassName(formElementValue)\n    ].join(' '),\n    ...formElementValue\n  };\n}\n\nfunction getElProps(element, args) {\n  if (isAFormEl(element)) {\n    return getFormElProps(element, args);\n  }\n\n  if (isAnErrorEl(element)) {\n    return getErrorElProps(element, args);\n  }\n\n  return element.props;\n}\n\nfunction getChildren(childrenProp, recurFormBuilder) {\n  if (isAReactEl(childrenProp)) {\n    return recurFormBuilder();\n  }\n\n  return childrenProp;\n}\n\nexport default function formBuilder(args) {\n  return React.Children.map(args.children, (element) => {\n    if (isLikeStringOrNum(element) || isAFormGroup(element)) {\n      return element;\n    }\n\n    const { children } = element.props;\n    const elementProps = getElProps(element, args);\n    const elementChildren = getChildren(\n      children,\n      formBuilder.bind(null, { ...args, children })\n    );\n\n    return [React.cloneElement(\n      element,\n      elementProps,\n      elementChildren\n    )];\n  });\n}\n"]}