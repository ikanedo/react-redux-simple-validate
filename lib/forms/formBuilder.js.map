{"version":3,"sources":["../../src/forms/formBuilder.js"],"names":["formBuilder","isLikeStringOrNum","element","isAnErrorEl","type","displayName","isAFormErrorElClass","props","getErrorMsg","name","errors","getErrorElProps","forInput","msg","getErrorClassElProps","inputName","errorClassName","className","mergeCallbacks","args","e","filter","arg","forEach","cb","getHasValueClassName","formElementValue","value","getErrorInputClassName","hasErrors","getValidateEvents","eventType","formGroupProps","onValidate","onInvalidate","invalidateEvent","validateEvent","lastFocusValue","getLastFocusValue","getVal","getFormElProps","onChange","onBlur","onFocus","values","onValueChange","getKeyVal","Error","onChangeEvents","onFocusEvents","onBlurEvents","key","ref","hasTheValueChanged","join","getElProps","getChildren","childrenProp","recurFormBuilder","Children","map","children","elementProps","elementChildren","bind","cloneElement"],"mappings":"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","file":"formBuilder.js","sourcesContent":["import React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport { isAReactEl, isAFormEl, isAFormGroup } from './formUtils';\nimport { ERROR_INPUT_CLASS_NAME, HAS_VALUE_CLASS_NAME } from './formConstants';\nimport { getFormElementRefName } from './formElement/formElementUtils';\nimport formElementFromState from './formElement/formElementFromState';\nimport formElementFromEvt from './formElement/formElementFromEvt';\n\nfunction isLikeStringOrNum(element) {\n  return !isAReactEl(element);\n}\n\nfunction isAnErrorEl({ type }) {\n  return type.displayName === 'FormError';\n}\n\nfunction isAFormErrorElClass({ props }) {\n  return !!props['data-form-error'];\n}\n\nfunction getErrorMsg(name, errors) {\n  return (errors[name] || [])[0];\n}\n\nfunction getErrorElProps(element, { errors }) {\n  const { forInput } = element.props;\n  return {\n    ...element.props,\n    msg: getErrorMsg(forInput, errors)\n  };\n}\n\nfunction getErrorClassElProps(element, { errors }) {\n  const inputName = element.props['data-form-error'];\n  const errorClassName = getErrorMsg(inputName, errors) ? '_is-error' : '';\n\n  return {\n    ...element.props,\n    className: `${element.props.className} ${errorClassName}`\n  };\n}\n\nfunction mergeCallbacks(...args) {\n  return (e) => {\n    args.filter(arg => isFunction(arg))\n      .forEach(cb => cb(e));\n  };\n}\n\nfunction getHasValueClassName(formElementValue) {\n  const element = formElementValue || {};\n  return isEmpty(element.value) ? '' : HAS_VALUE_CLASS_NAME;\n}\n\nfunction getErrorInputClassName(name, errors) {\n  const hasErrors = !!getErrorMsg(name, errors);\n  return hasErrors ? ERROR_INPUT_CLASS_NAME : '';\n}\n\nfunction getValidateEvents(eventType, formGroupProps) {\n  const {\n    onValidate,\n    onInvalidate,\n    invalidateEvent,\n    validateEvent\n  } = formGroupProps;\n\n  if (\n    invalidateEvent === eventType\n    && validateEvent === eventType\n  ) {\n    return (...args) => {\n      onInvalidate(...args);\n      onValidate(...args);\n    };\n  }\n\n  if (invalidateEvent === eventType) {\n    return onInvalidate;\n  }\n\n  if (validateEvent === eventType) {\n    return onValidate;\n  }\n\n  return null;\n}\n\nlet lastFocusValue = null;\nfunction getLastFocusValue(e) {\n  lastFocusValue = formElementFromEvt(e).getVal();\n}\n\nfunction getFormElProps(element, formGroupProps) {\n  const {\n    name,\n    onChange,\n    onBlur,\n    onFocus,\n    className\n  } = element.props;\n\n  const {\n    errors,\n    values,\n    onValueChange\n  } = formGroupProps;\n\n  const formElementValue = formElementFromState(element, values).getKeyVal();\n\n  if (isEmpty(name)) {\n    throw new Error(`${element.type} element is missing a name attribute!`, element);\n  }\n\n  const onChangeEvents = mergeCallbacks(onValueChange, onChange, getValidateEvents('onChange', formGroupProps));\n  const onFocusEvents = mergeCallbacks(onFocus, getLastFocusValue, getValidateEvents('onFocus', formGroupProps));\n  const onBlurEvents = mergeCallbacks(onBlur, getValidateEvents('onBlur', formGroupProps));\n\n  return {\n    ...element.props,\n    key: name,\n    ref: getFormElementRefName(element),\n    onChange: onChangeEvents,\n    onFocus: onFocusEvents,\n    onBlur: e => {\n      const hasTheValueChanged = formElementFromEvt(e).getVal() !== lastFocusValue;\n      if (hasTheValueChanged) {\n        onBlurEvents(e);\n      }\n    },\n    className: [\n      className,\n      getErrorInputClassName(name, errors),\n      getHasValueClassName(formElementValue)\n    ].join(' '),\n    ...formElementValue\n  };\n}\n\nfunction getElProps(element, args) {\n  if (isAFormEl(element)) {\n    return getFormElProps(element, args);\n  }\n\n  if (isAFormErrorElClass(element)) {\n    return getErrorClassElProps(element, args);\n  }\n\n  if (isAnErrorEl(element)) {\n    return getErrorElProps(element, args);\n  }\n\n  return element.props;\n}\n\nfunction getChildren(childrenProp, recurFormBuilder) {\n  if (isAReactEl(childrenProp)) {\n    return recurFormBuilder();\n  }\n\n  return childrenProp;\n}\n\nexport default function formBuilder(args) {\n  return React.Children.map(args.children, (element) => {\n    if (isLikeStringOrNum(element) || isAFormGroup(element)) {\n      return element;\n    }\n\n    const { children } = element.props;\n    const elementProps = getElProps(element, args);\n    const elementChildren = getChildren(\n      children,\n      formBuilder.bind(null, { ...args, children })\n    );\n\n    return [React.cloneElement(\n      element,\n      elementProps,\n      elementChildren\n    )];\n  });\n}\n"]}