{"version":3,"sources":["../../src/forms/formActions.js"],"names":["setInitialData","setDataReplace","setDataMerge","setValidity","setSingleValidity","setInputValue","reset","triggerValidate","CONST","formName","values","errors","type","FORM_INITIAL_DATA","FORM_DATA_REPLACE","FORM_DATA_MERGE","errorsMsgs","FORM_VALIDATE","FORM_SINGLE_VALIDATE","inputKeyVal","FORM_INPUT_CHANGE","formInput","FORM_RESET","trigger","FORM_TRIGGER_VALIDATION"],"mappings":";;;;;QAEgBA,c,GAAAA,c;QASAC,c,GAAAA,c;QASAC,Y,GAAAA,Y;QASAC,W,GAAAA,W;QAQAC,iB,GAAAA,iB;QAQAC,a,GAAAA,a;QAQAC,K,GAAAA,K;QAOAC,e,GAAAA,e;;AA5DhB;;IAAYC,K;;;;AAEL,SAASR,cAAT,CAAwBS,QAAxB,EAA4D;AAAA,MAA1BC,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACjE,SAAO;AACLC,UAAMJ,MAAMK,iBADP;AAELJ,sBAFK;AAGLC,kBAHK;AAILC;AAJK,GAAP;AAMD;;AAEM,SAASV,cAAT,CAAwBQ,QAAxB,EAA4D;AAAA,MAA1BC,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACjE,SAAO;AACLC,UAAMJ,MAAMM,iBADP;AAELL,sBAFK;AAGLC,kBAHK;AAILC;AAJK,GAAP;AAMD;;AAEM,SAAST,YAAT,CAAsBO,QAAtB,EAA0D;AAAA,MAA1BC,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAC/D,SAAO;AACLC,UAAMJ,MAAMO,eADP;AAELN,sBAFK;AAGLC,kBAHK;AAILC;AAJK,GAAP;AAMD;;AAEM,SAASR,WAAT,CAAqBM,QAArB,EAA+BO,UAA/B,EAA2C;AAChD,SAAO;AACLJ,UAAMJ,MAAMS,aADP;AAELN,YAAQK,UAFH;AAGLP;AAHK,GAAP;AAKD;;AAEM,SAASL,iBAAT,CAA2BK,QAA3B,EAAqCO,UAArC,EAAiD;AACtD,SAAO;AACLJ,UAAMJ,MAAMU,oBADP;AAELP,YAAQK,UAFH;AAGLP;AAHK,GAAP;AAKD;;AAEM,SAASJ,aAAT,CAAuBI,QAAvB,EAAiCU,WAAjC,EAA8C;AACnD,SAAO;AACLP,UAAMJ,MAAMY,iBADP;AAELC,eAAWF,WAFN;AAGLV;AAHK,GAAP;AAKD;;AAEM,SAASH,KAAT,CAAeG,QAAf,EAAyB;AAC9B,SAAO;AACLG,UAAMJ,MAAMc,UADP;AAELb;AAFK,GAAP;AAID;;AAEM,SAASF,eAAT,CAAyBE,QAAzB,EAAmD;AAAA,MAAhBc,OAAgB,uEAAN,IAAM;;AACxD,SAAO;AACLX,UAAMJ,MAAMgB,uBADP;AAELf,sBAFK;AAGLc;AAHK,GAAP;AAKD","file":"formActions.js","sourcesContent":["import * as CONST from './formConstants';\n\nexport function setInitialData(formName, values = {}, errors = {}) {\n  return {\n    type: CONST.FORM_INITIAL_DATA,\n    formName,\n    values,\n    errors\n  };\n}\n\nexport function setDataReplace(formName, values = {}, errors = {}) {\n  return {\n    type: CONST.FORM_DATA_REPLACE,\n    formName,\n    values,\n    errors\n  };\n}\n\nexport function setDataMerge(formName, values = {}, errors = {}) {\n  return {\n    type: CONST.FORM_DATA_MERGE,\n    formName,\n    values,\n    errors\n  };\n}\n\nexport function setValidity(formName, errorsMsgs) {\n  return {\n    type: CONST.FORM_VALIDATE,\n    errors: errorsMsgs,\n    formName\n  };\n}\n\nexport function setSingleValidity(formName, errorsMsgs) {\n  return {\n    type: CONST.FORM_SINGLE_VALIDATE,\n    errors: errorsMsgs,\n    formName\n  };\n}\n\nexport function setInputValue(formName, inputKeyVal) {\n  return {\n    type: CONST.FORM_INPUT_CHANGE,\n    formInput: inputKeyVal,\n    formName\n  };\n}\n\nexport function reset(formName) {\n  return {\n    type: CONST.FORM_RESET,\n    formName\n  };\n}\n\nexport function triggerValidate(formName, trigger = true) {\n  return {\n    type: CONST.FORM_TRIGGER_VALIDATION,\n    formName,\n    trigger\n  };\n}\n"]}