{"version":3,"sources":["../../src/forms/formGroupAsync.js"],"names":["flattenObj","obj","Object","keys","map","key","reduce","prev","current","assign","FormGroupAsync","formName","groups","resolve","bind","reject","generatePromises","successCallbacks","failCallbacks","resolvedMemo","resolvers","rejecters","handlePromises","getNames","groupName","Promise","promises","all","then","forEach","fn","catch","err","groupData","errorMsgs","Error","getName","group","cb","isSingleCallback","push"],"mappings":"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","file":"formGroupAsync.js","sourcesContent":["import { includes } from './formUtils';\n\nfunction flattenObj(obj) {\n  return Object.keys(obj)\n    .map(key => obj[key])\n    .reduce((prev, current) => Object.assign({}, prev, current), {});\n}\n\nexport default class FormGroupAsync {\n  constructor({ formName, groups }) {\n    this.formName = formName;\n    this.groups = [...groups];\n\n    this.resolve = this.resolve.bind(this);\n    this.reject = this.reject.bind(this);\n    this.generatePromises = this.generatePromises.bind(this);\n\n    this.successCallbacks = [];\n    this.failCallbacks = [];\n\n    this.resolvedMemo = {};\n    this.generatePromises();\n  }\n\n  generatePromises() {\n    this.successCallbacks = [];\n    this.failCallbacks = [];\n\n    this.resolvers = {};\n    this.rejecters = {};\n    this.handlePromises(\n      this.getNames().map(groupName => {\n        if (this.resolvedMemo[groupName]) {\n          return Promise.resolve(this.resolvedMemo[groupName]);\n        }\n\n        return new Promise((resolve, reject) => {\n          this.resolvers[groupName] = resolve;\n          this.rejecters[groupName] = reject;\n        });\n      })\n    );\n  }\n\n  handlePromises(promises) {\n    Promise\n      .all(promises)\n      .then(() => {\n        if (this.successCallbacks[0]) {\n          this.successCallbacks.forEach(fn => fn(flattenObj(this.resolvedMemo)));\n        }\n\n        this.resolvedMemo = {};\n      })\n      .catch(err => {\n        if (this.failCallbacks[0]) {\n          this.failCallbacks.forEach(fn => fn(err));\n        }\n      })\n      .then(this.generatePromises);\n  }\n\n  resolve(groupData, groupName) {\n    if (this.resolvers[groupName]) {\n      this.resolvers[groupName](groupData);\n    }\n\n    this.resolvedMemo[groupName] = groupData;\n    return this;\n  }\n\n  reject(errorMsgs, groupName) {\n    if (this.rejecters[groupName]) {\n      this.rejecters[groupName](errorMsgs);\n    }\n\n    this.resolvedMemo[groupName] = null;\n    return this;\n  }\n\n  getName(key) {\n    if (!(includes(this.groups, key))) {\n      throw new Error(\n        `${key} group is not found in ${this.formName} groups. Did you mispell it?`\n      );\n    }\n\n    return `${this.formName}-${key}`;\n  }\n\n  getNames() {\n    return this.groups.map(group => this.getName(group));\n  }\n\n  each(cb) {\n    this.getNames().forEach(cb);\n    return this;\n  }\n\n  then(fn, isSingleCallback = false) {\n    if (isSingleCallback) {\n      this.successCallbacks = [fn.bind(this)];\n    } else {\n      this.successCallbacks.push(fn.bind(this));\n    }\n\n    return this;\n  }\n\n  fail(fn, isSingleCallback = false) {\n    if (isSingleCallback) {\n      this.failCallbacks = [fn.bind(this)];\n    } else {\n      this.failCallbacks.push(fn.bind(this));\n    }\n\n    return this;\n  }\n}\n"]}